{"version":3,"sources":["components/Rating/Rating.styles.jsx","utils/ratingConfig.js","components/Rating/Rating.jsx","components/Profile/Profile.styles.jsx","components/Profile/Profile.jsx","components/Statistics/Statistics.styles.jsx","components/Statistics/Statistics.jsx","utils/randomColor.js","components/FriendList/FriendList.styles.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.styles.jsx","components/TransactionHistory/TransactionHistory.jsx","App.jsx","index.js"],"names":["Ratinglist","styled","ul","Ratingitem","li","Ratinglabel","span","Ratingquantity","ratingConfig","label","quantity","rating","followers","views","likes","Rating","map","Menu","div","Menuinfo","Avatar","img","Name","p","Tag","Location","Profile","avatar","name","tag","location","src","alt","StatisticsSection","section","StatTitle","h2","StatList","StatItem","StatLabel","StatPercentage","Statistics","title","stats","id","percentage","style","backgroundColor","Math","random","toString","substr","FriendContainer","FriendItem","Online","Offline","FriendImg","FriendName","FriendList","friends","isOnline","width","TransactionTable","table","TransactionThead","thead","TransactionTr","tr","TransactionTh","th","TransactionTbody","tbody","TransactionTd","td","TransactionHistory","transactions","type","amount","currency","App","className","statsdata","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a5b5518.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Ratinglist = styled.ul`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-top: 1px solid #c9c9c9;\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n` ;\r\nexport const Ratingitem = styled.li`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding-top: 20px;\r\n    padding-bottom: 20px;\r\n    width: 100%;\r\n     :not(:last-child) {\r\n        border-right: 1px solid #c9c9c9;\r\n    } \r\n`;\r\nexport const Ratinglabel = styled.span`\r\n    margin-bottom: 8px;\r\n    color: #adacac;\r\n    font-size:12px;\r\n`;\r\n\r\nexport const Ratingquantity = styled.span`\r\n    font-weight: bold;\r\n`;","import rating from '../data/user.json';\r\nexport const ratingConfig = [\r\n    {\r\n        label: \"Followers\",\r\n        quantity: rating.followers,\r\n    },\r\n    {\r\n        label: \"Views\",\r\n        quantity: rating.views,\r\n    },\r\n    {\r\n        label: \"Likes\",\r\n        quantity: rating.likes,\r\n    }\r\n]","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { Ratinglist, Ratingitem, Ratinglabel, Ratingquantity } from \"./Rating.styles\";\r\nimport { ratingConfig } from '../../utils/ratingConfig';\r\n\r\nfunction Rating() {\r\n    return (\r\n        <Ratinglist>\r\n            {ratingConfig.map(({ label, quantity }) => (\r\n                <Ratingitem key={label}>\r\n                    <Ratinglabel>{label}</Ratinglabel>\r\n                    <Ratingquantity>{quantity}</Ratingquantity>\r\n                </Ratingitem>\r\n            ))}\r\n        </Ratinglist>\r\n    );\r\n};\r\nRating.propTypes = {\r\n    label: PropTypes.string,\r\n    quantity: PropTypes.number,\r\n};\r\n\r\n\r\nexport default Rating\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Menu = styled.div`\r\nwidth: 20%;\r\n    height: 30%;\r\n    background-color: #f5f5f5;\r\n    box-shadow: 0px 0px 8px 0px rgba(34, 60, 80, 0.2);\r\n    margin: 20px;\r\n`;\r\nexport const Menuinfo = styled.div`\r\nbackground-color: #fff;\r\n    padding: 20px\r\n    `;\r\n\r\n\r\nexport const Avatar = styled.img`\r\nwidth: 100px;\r\nborder - radius: 50 %;\r\n`;\r\n\r\nexport const Name = styled.p`\r\n\r\n    `;\r\n\r\nexport const Tag = styled.p`\r\n\r\n    `;\r\n\r\nexport const Location = styled.p`\r\n\r\n    `;\r\n\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Rating from '../Rating/Rating';\r\nimport { Avatar, Name, Tag, Location, Menuinfo, Menu } from \"./Profile.styles\";\r\n\r\nfunction Profile({ avatar, name, tag, location }) {\r\n    return (\r\n        <Menu>\r\n            <Menuinfo>\r\n                <Avatar src={avatar} alt=\"Аватар пользователя\" />\r\n                <Name>{name}</Name>\r\n                <Tag>@{tag}</Tag>\r\n                <Location>{location}</Location>\r\n            </Menuinfo>\r\n            <Rating />\r\n        </Menu>\r\n    );\r\n}\r\n\r\nProfile.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n}\r\nexport default Profile;\r\n\r\n\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const StatisticsSection = styled.section`\r\n background-color: #fff;\r\n    box-shadow: 0px 0px 8px 0px rgba(34, 60, 80, 0.2);\r\n    width: 40%;\r\n    height: 30%;\r\n    margin-top: 10px;\r\n`;\r\nexport const StatTitle = styled.h2`\r\ncolor: #858585;\r\n  font-size: 35px;\r\n  padding-top: 40px;\r\n  padding-bottom: 45px;\r\n  margin: 0;\r\n`;\r\n\r\nexport const StatList = styled.ul`\r\ndisplay: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-top: 1px solid #858585;\r\n  color: #fff;\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\nexport const StatItem = styled.li`\r\ndisplay: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding-top: 15px;\r\n  padding-bottom: 15px;\r\n  width: 100%;\r\n  color: #fff;\r\n    :not(:last-child) {\r\n    border-right: 1px solid #858585;\r\n  }\r\n`;\r\nexport const StatLabel = styled.span`\r\nfont-weight: 500;\r\n  margin-bottom: 20px;`;\r\nexport const StatPercentage = styled.span`\r\nfont-size: 25px;\r\n  font-weight: 700;`;\r\n","import React from 'react';\r\nimport { randomColor } from \"../../utils/randomColor\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n    StatisticsSection,\r\n    StatTitle,\r\n    StatList,\r\n    StatItem,\r\n    StatLabel,\r\n    StatPercentage\r\n} from \"./Statistics.styles\";\r\n\r\nfunction Statistics({ title, stats }) {\r\n    return (\r\n        <StatisticsSection>\r\n            {title && <StatTitle>{title}</StatTitle>}\r\n            <StatList>\r\n                {stats.map(({ id, label, percentage }) => (\r\n                    <StatItem key={id} style={{ backgroundColor: randomColor() }}>\r\n                        <StatLabel>{label}</StatLabel>\r\n                        <StatPercentage>{percentage}%</StatPercentage>\r\n                    </StatItem>\r\n                ))}\r\n            </StatList>\r\n        </StatisticsSection>\r\n    );\r\n}\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            label: PropTypes.string.isRequired,\r\n            percentage: PropTypes.number.isRequired\r\n        }),\r\n    ).isRequired,\r\n};\r\nexport default Statistics","export const randomColor = () => {\r\n    return `#${Math.random().toString(16).substr(-6)}`;\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const FriendContainer = styled.ul`\r\ndisplay: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    list-style: none;\r\n    margin: 20px;\r\n    padding: 0;\r\n    width: 30%;`;\r\n\r\nexport const FriendItem = styled.li`\r\ndisplay: flex;\r\n    align-items: flex-start;\r\n    background-color: #fff;\r\n    width: 330px;\r\n    margin-bottom: 10px;\r\n    box-shadow: 0px 0px 8px 0px rgba(34, 60, 80, 0.2);\r\n    padding: 20px;\r\n`;\r\n\r\nexport const Online = styled.span`\r\nbackground-color: green;\r\nwidth: 20px;\r\nheight: 20px;\r\nborder-radius: 50%;\r\nmargin-right: 20px;\r\n`;\r\nexport const Offline = styled.span`\r\nbackground-color: red;\r\nwidth: 20px;\r\nheight: 20px;\r\nborder-radius: 50%;\r\nmargin-right: 20px;\r\n`;\r\nexport const FriendImg = styled.img`\r\nbackground-color: #d4c7cb;\r\npadding: 5px;\r\nborder-radius: 4px;\r\nmargin-right: 20px;\r\n`;\r\nexport const FriendName = styled.p`\r\nfont-size: 20px;\r\nfont-weight: 600;\r\n`;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { FriendContainer, FriendItem, Online, Offline, FriendImg, FriendName } from './FriendList.styles';\r\n\r\n\r\n\r\nfunction FriendList({ friends }) {\r\n    return (\r\n        <FriendContainer>\r\n            {friends.map(({ avatar, name, isOnline, id }) => (\r\n                <FriendItem key={id}>\r\n                    {isOnline ? <Online /> : <Offline />}\r\n                    <FriendImg src={avatar} alt={name} width=\"48\" />\r\n                    <FriendName>{name}</FriendName>\r\n                </FriendItem>\r\n            ))}\r\n        </FriendContainer>\r\n    );\r\n}\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            avatar: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            isOnline: PropTypes.bool.isRequired,\r\n        }),\r\n    ),\r\n}\r\n\r\nexport default FriendList\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const TransactionTable = styled.table`\r\nborder-collapse: collapse;\r\n  font-size: 18px;\r\n  margin-top: 15px;\r\n  background-color: #fff;\r\n  width: 64%;\r\n  margin: 20px;\r\n  box-shadow: 0px 0px 8px 0px rgba(34, 60, 80, 0.2);\r\n`;\r\nexport const TransactionThead = styled.thead`\r\ncolor: #fff;\r\n  font-size: 20px;\r\n  background-color: #eb658e;\r\n  border: 2px solid dimgray;\r\n  `;\r\nexport const TransactionTr = styled.tr`\r\n:nth-of-type(even) {\r\n    background-color: #f5f5f5;\r\n  }\r\n`;\r\nexport const TransactionTh = styled.th`\r\n padding: 5px;\r\n`;\r\nexport const TransactionTbody = styled.tbody`\r\nborder: 2px solid dimgray;\r\n`;\r\nexport const TransactionTd = styled.td`\r\npadding: 5px;\r\nborder-right: 2px solid dimgray;\r\n`;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n    TransactionTable, TransactionThead,\r\n    TransactionTr, TransactionTh, TransactionTbody, TransactionTd\r\n} from \"./TransactionHistory.styles\"\r\n\r\nfunction TransactionHistory({ transactions }) {\r\n    return (\r\n        <TransactionTable>\r\n            <TransactionThead>\r\n                <TransactionTr>\r\n                    <TransactionTh>Type</TransactionTh>\r\n                    <TransactionTh>Amount</TransactionTh>\r\n                    <TransactionTh>Currency</TransactionTh>\r\n                </TransactionTr>\r\n            </TransactionThead>\r\n            <TransactionTbody>\r\n                {transactions.map(({ id, type, amount, currency }) => (\r\n                    <TransactionTr key={id}>\r\n                        <TransactionTd>{type}</TransactionTd>\r\n                        <TransactionTd>{amount}</TransactionTd>\r\n                        <TransactionTd>{currency}</TransactionTd>\r\n                    </TransactionTr>\r\n                ))}\r\n            </TransactionTbody>\r\n        </TransactionTable>\r\n    )\r\n}\r\nTransactionHistory.propTypes = {\r\n    transactions: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            type: PropTypes.string.isRequired,\r\n            amout: PropTypes.string.isRequired,\r\n            currency: PropTypes.string.isRequired,\r\n        }),\r\n    ),\r\n};\r\nexport default TransactionHistory\r\n","import Profile from \"./components/Profile/Profile\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FriendList from \"./components/FriendList/FriendList\";\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\n\nimport { name, tag, location, avatar } from \"./data/user.json\";\nimport statsdata from \"./data/statistical-data.json\";\nimport friends from \"./data/friends.json\";\nimport transactions from \"./data/transaction.json\";\n\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile avatar={avatar} name={name} tag={tag} location={location} />\n      <Statistics title=\"Upload stats\" stats={statsdata} />\n      <FriendList friends={friends} />\n      <TransactionHistory transactions={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n\n/* avatar={avatar} name={name} tag={tag} location={location} */\n\n/* import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n */","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}